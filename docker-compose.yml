services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data

  airflow:
    image: apache/airflow:2.7.2-python3.9
    env_file:
      - .env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      SNOWFLAKE_ACCOUNT: ${SNOWFLAKE_ACCOUNT:-}
      SNOWFLAKE_USER: ${SNOWFLAKE_USER:-}
      SNOWFLAKE_PASSWORD: ${SNOWFLAKE_PASSWORD:-}
      SNOWFLAKE_WAREHOUSE: ${SNOWFLAKE_WAREHOUSE:-}
      SNOWFLAKE_DATABASE: ${SNOWFLAKE_DATABASE:-}
      SNOWFLAKE_SCHEMA: ${SNOWFLAKE_SCHEMA:-}
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./requirements.txt:/requirements.txt
    command: >
      bash -c "
        pip install -r /requirements.txt &&
        airflow db init &&
        airflow users create --username admin --password admin --firstname admin --lastname admin --role Admin --email admin@example.com --if-not-exists &&
        airflow scheduler &
        airflow webserver
      "
    
  superset:
    image: apache/superset:latest
    env_file:
      - .env
    ports:
      - "8088:8088"
    environment:
      SUPERSET_SECRET_KEY: "thisISaSECRET_1234"
    volumes:
      - ./superset:/app/superset_home
    command: superset run -h 0.0.0.0 -p 8088

volumes:
  postgres-db-volume:

